print("[ИНФО] Вас приветствует bobikpatcher-выберите ipa для патча")
import zipfile
import os
import shutil
import tempfile
import plistlib
import random
from tkinter import Tk, filedialog, simpledialog, messagebox

version_year_map = {
"1.0": 2011,
    "1.1.0": 2011,
    "1.1.1": 2011,
    "2.1.2": 2012,
    "2.2.2": 2012,
    "2.3.1": 2012,
    "2.4.1": 2012,
    "2.5.1": 2013,
    "2.6.1": 2013,
    "2.7.6": 2013,
    "2.8.6": 2013,
    "2.9.6": 2013,
    "2.10.1": 2013,
    "2.11.1": 2013,
    "2.12.1": 2013,
    "2.13.1": 2013,
    "2.14.2": 2013,
    "2.15.102": 2013,
    "2.16.103": 2013,
    "2.104.33970": 2013,
    "2.105.34351": 2013,
    "2.106.34528": 2013,
    "2.107.34773": 2013,
    "2.108.35154": 2013,
    "2.109.35240": 2013,
    "2.111.35666": 2013,
    "2.112.35972": 2013,
    "2.115.36595": 2013,
    "2.116.36845": 2013,
    "2.117.37190": 2013,
    "2.118.37236": 2013,
    "2.120.37929": 2013,
    "2.121.38159": 2013,
    "2.121.38265": 2013,
    "2.122.38464": 2013,
    "2.123.38776": 2013,
    "2.124.39095": 2013,
    "2.125.39335": 2013,
    "2.126.39527": 2013,
    "2.127.39818": 2013,
    "2.128.40270": 2013,
    "2.129.40587": 2013,
    "2.130.40900": 2013,
    "2.131.41164": 2013,
    "2.132.41333": 2013,
    "2.134.42174": 2014,
    "2.135.42584": 2014,
    "2.136.42711": 2014,
    "2.136.43082": 2014,
    "2.137.43469": 2014,
    "2.138.43584": 2014,
    "2.139.43843": 2014,
    "2.140.44071": 2014,
    "2.141.44305": 2014,
    "2.142.44504": 2014,
    "2.143.44717": 2014,
    "2.144.45017": 2014,
    "2.145.45304": 2014,
    "2.147.45744": 2014,
    "2.148.45925": 2014,
    "2.149.46203": 2014,
    "2.150.46522": 2014,
    "2.151.46786": 2014,
    "2.152.46962": 2014,
    "2.153.47231": 2014,
    "2.154.47383": 2014,
    "2.159.48929": 2014,
    "2.160.49418": 2014,
    "2.161.49588": 2014,
    "2.162.49770": 2014,
    "2.163.50106": 2014,
    "2.164.50577": 2014,
    "2.165.50938": 2014,
    "2.166.50996": 2014,
    "2.167.51261": 2014,
    "2.169.52010": 2014,
    "2.172.52864": 2014,
    "2.174.53396": 2014,
    "2.176.53881": 2015,
    "2.180.55241": 2015,
    "2.183.55974": 2015,
    "2.184.56182": 2015,
    "2.185.56936": 2015,
    "2.185.56982": 2015,
    "2.189.57438": 2015,
    "2.190.57794": 2015,
    "2.192.58344": 2015,
    "2.196.59620": 2015,
    "2.197.60133": 2015,
    "2.199.60486": 2015,
    "2.203.61208": 2015,
    "2.204.61604": 2015,
    "2.205.61876": 2015,
    "2.206.62132": 2015,
    "2.207.62260": 2015,
    "2.209.62880": 2015,
    "2.210.63085": 2015,
    "2.211.63329": 2015,
    "2.212.63487": 2015,
    "2.213.63994": 2015,
    "2.215.64407": 2015,
    "2.218.65279": 2015,
    "2.219.65545": 2015,
    "2.221.66284": 2015,
    "2.223.66841": 2015,
    "2.226.68062": 2016,
    "2.228.68457": 2016,
    "2.229.68780": 2016,
    "2.230.68937": 2016,
    "2.232.69914": 2016,
    "2.233.70116": 2016,
    "2.234.70730": 2016,
    "2.235.70730": 2016,
    "2.238.71937": 2016,
    "2.238.72679": 2016,
    "2.242.73572": 2016,
    "2.243.74247": 2016,
    "2.246.75923": 2016,
    "2.250.74247": 2016,
    "2.250.77601": 2016,
    "2.251.79153": 2016,
    "2.251.79582": 2016,
    "2.253.80523": 2016,
    "2.253.81680": 2016,
    "2.253.82297": 2016,
    "2.257.84176": 2016,
    "2.260.86230": 2016,
    "2.263.88838": 2016,
    "2.264.89370": 2016,
    "2.265.89988": 2016,
    "2.265.91736": 2016,
    "2.267.92468": 2016,
    "2.268.93534": 2016,
    "2.269.94916": 2016,
    "2.270.96141": 2016,
    "2.271.97392": 2016,
    "2.274.100932": 2017,
    "2.276.102913": 2017,
    "2.277.103968": 2017,
    "2.278.104886": 2017,
    "2.278.105843": 2017,
    "2.278.107023": 2017,
    "2.280.107170": 2017,
    "2.281.108281": 2017,
    "2.282.109386": 2017,
    "2.283.111404": 2017,
    "2.284.112222": 2017,
    "2.285.113649": 2017,
    "2.287.116644": 2017,
    "2.288.119265": 2017,
    "2.290.121615": 2017,
    "2.291.122250": 2017,
    "2.292.124297": 2017,
    "2.293.126074": 2017,
    "2.293.126451": 2017,
    "2.294.126818": 2017,
    "2.295.128490": 2017,
    "2.297.132847": 2017,
    "2.298.135069": 2017,
    "2.299.137632": 2017,
    "2.300.138670": 2017,
    "2.301.140216": 2017,
    "2.302.142541": 2017,
    "2.303.144094": 2017,
    "2.305.145834": 2017,
    "2.306.147994": 2017,
    "2.307.149105": 2017,
    "2.308.150864": 2017,
    "2.310.155249": 2017,
    "2.313.159574": 2017,
    "2.314.161197": 2017,
    "2.315.163096": 2017,
    "2.315.164113": 2017,
    "2.316.164791": 2017,
    "2.317.167174": 2017,
    "2.318.168780": 2017,
    "2.319.172390": 2018,
    "2.320.173223": 2018,
    "2.321.174771": 2018,
    "2.323.177760": 2018,
    "2.324.180084": 2018,
    "2.325.181080": 2018,
    "2.326.182923": 2018,
    "2.327.184115": 2018,
    "2.328.186191": 2018,
    "2.330.189424": 2018,
    "2.331.191385": 2018,
    "2.332.192405": 2018,
    "2.333.193867": 2018,
    "2.334.196825": 2018,
    "2.335.197549": 2018,
    "2.336.199282": 2018,
    "2.337.201523": 2018,
    "2.339.206352": 2018,
    "2.340.207129": 2018,
    "2.341.208519": 2018,
    "2.342.212340": 2018,
    "2.343.213411": 2018,
    "2.344.215411": 2018,
    "2.345.219036": 2018,
    "2.346.222214": 2018,
    "2.348.228302": 2018,
    "2.349.230330": 2018,
    "2.350.231118": 2018,
    "2.351.232950": 2018,
    "2.352.235677": 2018,
    "2.353.236588": 2018,
    "2.354.238701": 2018,
    "2.355.241665": 2018,
    "2.356.243365": 2018,
    "2.357.244832": 2018,
    "2.358.246716": 2018,
    "2.359.249529": 2018,
    "2.360.253064": 2018,
    "2.362.255825": 2018,
    "2.364.262407": 2018,
    "2.365.265265": 2018,
    "2.366.266498": 2018,
    "2.366.267700": 2018,
    "2.367.269925": 2019,
    "2.368.271345": 2019,
    "2.369.274489": 2019,
    "2.370.276837": 2019,
    "2.371.276568": 2019,
    "2.372.278233": 2019,
    "2.373.280591": 2019,
    "2.374.282978": 2019,
    "2.375.284048": 2019,
    "2.376.286907": 2019,
    "2.378.290628": 2019,
    "2.379.294167": 2019,
    "2.380.294446": 2019,
    "2.381.295409": 2019,
    "2.382.297104": 2019,
    "2.383.299732": 2019,
    "2.384.302565": 2019,
    "2.385.303034": 2019,
    "2.387.306142": 2019,
    "2.388.307917": 2019,
    "2.389.313036": 2019,
    "2.390.312659": 2019,
    "2.392.317745": 2019,
    "2.393.319623": 2019,
    "2.394.322464": 2019,
    "2.395.324413": 2019,
    "2.396.327208": 2019,
    "2.397.329586": 2019,
    "2.398.332127": 2019,
    "2.399.334382": 2019,
    "2.400.336387": 2019,
    "2.401.338533": 2019,
    "2.403.344044": 2019,
    "2.404.346082": 2019,
    "2.406.351423": 2019,
    "2.407.353595": 2019,
    "2.408.355772": 2019,
    "2.409.358770": 2019,
    "2.410.360448": 2019,
    "2.411.364317": 2019,
    "2.412.365788": 2019,
    "2.413.370504": 2019,
    "2.414.371885": 2020,
    "2.415.373700": 2020,
    "2.416.375447": 2020,
    "2.417.376966": 2020,
    "2.418.380321": 2020,
    "2.419.381237": 2020,
    "2.421.385673": 2020,
    "2.422.387564": 2020,
    "2.423.391560": 2020,
    "2.424.392804": 2020,
    "2.425.394331": 2020,
    "2.426.397338": 2020,
    "2.426.397632": 2020,
    "2.427.399257": 2020,
    "2.428.401006": 2020,
    "2.430.404271": 2020,
    "2.431.404520": 2020,
    "2.434.405774": 2020,
    "2.435.406105": 2020,
    "2.436.406463": 2020,
    "2.437.406997": 2020,
    "2.438.407206": 2020,
    "2.439.407706": 2020,
    "2.440.408152": 2020,
    "2.441.408614": 2020,
    "2.442.409372": 2020,
    "2.443.409841": 2020,
    "2.444.409999": 2020,
    "2.445.410316": 2020,
    "2.447.410975": 2020,
    "2.448.411159": 2020,
    "2.449.411731": 2020,
    "2.450.411874": 2020,
    "2.451.412443": 2020,
    "2.454.413308": 2020,
    "2.455.413788": 2020,
    "2.457.414557": 2020,
    "2.458.415263": 2020,
    "2.459.415955": 2020,
    "2.460.416177": 2021,
    "2.461.416397": 2021,
    "2.462.416719": 2021,
    "2.463.417004": 2021,
    "2.464.417592": 2021,
    "2.465.417621": 2021,
    "2.466.418149": 2021,
    "2.467.418331": 2021,
    "2.470.419246": 2021,
    "2.471.419833": 2021,
    "2.472.420209": 2021,
    "2.474.420553": 2021,
    "2.474.420873": 2021,
    "2.475.420862": 2021,
    "2.478.422096": 2021,
    "2.478.422478": 2021,
    "2.479.422568": 2021,
    "2.480.423050": 2021,
    "2.481.423686": 2021,
    "2.482.424268": 2021,
    "2.483.425021": 2021,
    "2.484.425477": 2021,
    "2.485.425755": 2021,
    "2.486.426194": 2021,
    "2.487.426768": 2021,
    "2.488.427318": 2021,
    "2.490.427960": 2021,
    "2.491.428447": 2021,
    "2.492.428906": 2021,
    "2.493.429776": 2021,
    "2.494.341": 2021,
    "2.495.268": 2021,
    "2.497.359": 2021,
    "2.498.396": 2021,
    "2.499.381": 2021,
    "2.500.373": 2021,
    "2.501.362": 2021,
    "2.502.362": 2021,
    "2.503.338": 2021,
    "2.504.408": 2021,
    "2.505.419": 2021,
    "2.506.608": 2021,
    "2.509.219": 2022,
    "2.512.415": 2022,
    "2.513.418": 2022,
    "2.513.422": 2022,
    "2.514.398": 2022,
    "2.515.376": 2022,
    "2.516.304": 2022,
    "2.518.390": 2022,
    "2.519.431": 2022,
    "2.520.399": 2022,
    "2.521.404": 2022,
    "2.522.281": 2022,
    "2.523.387": 2022,
    "2.524.408": 2022,
    "2.525.378": 2022,
    "2.526.426": 2022,
    "2.527.372": 2022,
    "2.528.404": 2022,
    "2.529.367": 2022,
    "2.530.290": 2022,
    "2.531.422": 2022,
    "2.532.470": 2022,
    "2.533.253": 2022,
    "2.535.277": 2022,
    "2.536.453": 2022,
    "2.536.458": 2022,
    "2.538.363": 2022,
    "2.539.400": 2022,
    "2.540.501": 2022,
    "2.541.422": 2022,
    "2.542.509": 2022,
    "2.543.566": 2022,
    "2.544.300": 2022,
    "2.545.432": 2022,
    "2.546.522": 2022,
    "2.547.548": 2022,
    "2.548.523": 2022,
    "2.549.632": 2022,
    "2.550.640": 2022,
    "2.551.575": 2022,
    "2.552.587": 2022,
    "2.553.620": 2022,
    "2.554.501": 2022,
    "2.555.874": 2022,
    "2.558.227": 2023,
    "2.559.373": 2023,
    "2.560.362": 2023,
    "2.561.358": 2023,
    "2.562.360": 2023,
    "2.563.390": 2023,
    "2.564.444": 2023,
    "2.565.360": 2023,
    "2.566.545": 2023,
    "2.566.546": 2023,
    "2.568.524": 2023,
    "2.570.563": 2023,
    "2.571.526": 2023,
    "2.572.482": 2023,
    "2.573.506": 2023,
    "2.574.445": 2023,
    "2.575.424": 2023,
    "2.575.425": 2023,
    "2.577.506": 2023,
    "2.578.564": 2023,
    "2.579.402": 2023,
    "2.582.384": 2023,
    "2.582.400": 2023,
    "2.583.1069": 2023,
    "2.586.0": 2023,
    "2.588.516": 2023,
    "2.589.593": 2023,
    "2.590.678": 2023,
    "2.591.630": 2023,
    "2.593.657": 2023,
    "2.594.524": 2023,
    "2.598.613": 2023,
    "2.600.713": 2023,
    "2.601.508": 2023,
    "2.602.625": 2023,
    "2.603.557": 2023,
    "2.603.565": 2023,
    "2.604.491": 2023,
    "2.605.656": 2023,
    "2.605.660": 2023,
    "2.607.548": 2024,
    "2.609.387": 2024,
    "2.610.472": 2024,
    "2.611.432": 2024,
    "2.612.532": 2024,
    "2.613.510": 2024,
    "2.614.409": 2024,
    "2.615.606": 2024,
    "2.616.655": 2024,
    "2.617.655": 2024,
    "2.618.546": 2024,
    "2.619.508": 2024,
    "2.619.520": 2024,
    "2.620.463": 2024,
    "2.621.526": 2024,
    "2.622.470": 2024,
    "2.623.555": 2024,
    "2.624.519": 2024,
    "2.625.507": 2024,
    "2.627.451": 2024,
    "2.628.388": 2024,
    "2.629.609": 2024,
    "2.630.554": 2024,
    "2.630.557": 2024,
    "2.631.472": 2024,
    "2.633.513": 2024,
    "2.634.417": 2024,
    "2.635.588": 2024,
    "2.636.625": 2024,
    "2.636.626": 2024,
    "2.637.726": 2024,
    "2.638.610": 2024,
    "2.639.688": 2024,
    "2.640.730": 2024,
    "2.641.737": 2024,
    "2.642.637": 2024,
    "2.644.702": 2024,
    "2.645.665": 2024,
    "2.646.699": 2024,
    "2.647.716": 2024,
    "2.649.877": 2024,
    "2.650.741": 2024,
    "2.651.836": 2024,
    "2.652.762": 2024,
    "2.654.464": 2024,
    "2.654.474": 2025,
    "2.655.1095": 2025,
    "2.657.604": 2025,
    "2.658.460": 2025,
    "2.659.473": 2025,
    "2.660.644": 2025,
    "2.660.649": 2025,
    "2.662.536": 2025,
    "2.663.657": 2025,
    "2.664.707": 2025,
    "2.665.681": 2025,
    "2.666.608": 2025,
    "2.667.665": 2025,
    "2.667.668": 2025,
    "2.668.658": 2025,
    "2.669.657": 2025,
    "2.670.714": 2025,
    "2.672.699": 2025,
    "2.673.712": 2025,
    "2.674.782": 2025,
    "2.675.715": 2025,
    "2.677.762": 2025
}

def patch_bytes(file_path, replacement_map):
    try:
        with open(file_path, 'rb') as f:
            data = f.read()
        modified = False
        for original, replacement in replacement_map.items():
            orig_bytes = original.encode()
            if orig_bytes in data:
                padded = replacement.ljust(len(original), '\x00').encode()
                data = data.replace(orig_bytes, padded)
                modified = True
        if modified:
            with open(file_path, 'wb') as f:
                f.write(data)
    except Exception as e:
        print(f"[ОШИБКА] Не удалось пропатчить {os.path.basename(file_path)}: {e}")

def get_version(plist_path):
    try:
        with open(plist_path, 'rb') as f:
            plist = plistlib.load(f)
            return plist.get("CFBundleShortVersionString", "Unknown")
    except:
        return "Unknown"

def main():
    Tk().withdraw()

    ipa_path = filedialog.askopenfilename(
        title="Выберите .ipa файл",
        filetypes=[("IPA файл", "*.ipa")]
    )
    if not ipa_path:
        return

    temp_dir = tempfile.mkdtemp()
    with zipfile.ZipFile(ipa_path, 'r') as zip_ref:
        zip_ref.extractall(temp_dir)

    payload_path = os.path.join(temp_dir, "Payload")
    app_dir = next((os.path.join(payload_path, d) for d in os.listdir(payload_path) if d.endswith(".app")), None)
    if not app_dir:
        messagebox.showerror("Ошибка", "Папка .app не найдена.")
        shutil.rmtree(temp_dir)
        return

    plist_path = os.path.join(app_dir, "Info.plist")
    short_version = get_version(plist_path)
    app_year = version_year_map.get(short_version, "Неизвестен")

    print(f"[ИНФО] Версия: {short_version} → Год: {app_year}")
    print("[ИНФО] Подготовка замены доменов...")

    roblox_host = simpledialog.askstring("roblox.com", "Введите замену для roblox.com (10 символов):")
    if not roblox_host or len(roblox_host) != 10:
        messagebox.showerror("Ошибка", "roblox.com должен содержать ровно 10 символов.")
        shutil.rmtree(temp_dir)
        return

    labs_host = None
    rbxcdn_host = None

    if isinstance(app_year, int):
        if app_year <= 2019:
            labs_input = simpledialog.askstring(
                "robloxlabs.com",
                "Введите замену для robloxlabs.com:\n• 10 символов — будет добавлено sus.\n• 14 символов — полная замена\n• Пусто — пропустить"
            )
            if labs_input:
                if len(labs_input) == 10:
                    labs_host = "sus." + labs_input
                elif len(labs_input) == 14:
                    labs_host = labs_input
                else:
                    messagebox.showerror("Ошибка", "robloxlabs.com должен содержать 10 или 14 символов.")
                    shutil.rmtree(temp_dir)
                    return

        if app_year >= 2019:
            rbxcdn_input = simpledialog.askstring("rbxcdn.com", "Введите замену для rbxcdn.com (10 символов):")
            if not rbxcdn_input or len(rbxcdn_input) != 10:
                messagebox.showerror("Ошибка", "rbxcdn.com должен содержать ровно 10 символов.")
                shutil.rmtree(temp_dir)
                return
            rbxcdn_host = rbxcdn_input

    display_name = simpledialog.askstring("Имя приложения", "Введите новое отображаемое имя приложения (можно оставить пустым):")
    bundle_id = simpledialog.askstring("Идентификатор", "Введите новый Bundle Identifier (оставьте пустым — сгенерируем):")
    if bundle_id == "":
        base = "com.roblox.robloxmobile"
        suffix = "".join(random.choices("0123456789", k=5))
        bundle_id = base + suffix

    try:
        with open(plist_path, 'rb') as f:
            plist = plistlib.load(f)

        if display_name:
            plist["CFBundleDisplayName"] = display_name
        if bundle_id:
            plist["CFBundleIdentifier"] = bundle_id

        with open(plist_path, 'wb') as f:
            plistlib.dump(plist, f)

        print(f"[ИНФО] Info.plist обновлён → DisplayName = {display_name or 'без изменений'}, Identifier = {bundle_id}")
    except Exception as e:
        print(f"[ОШИБКА] Не удалось обновить Info.plist: {e}")
        shutil.rmtree(temp_dir)
        return

    domains = {"roblox.com": roblox_host}
    if labs_host:
        domains["robloxlabs.com"] = labs_host
    if rbxcdn_host:
        domains["rbxcdn.com"] = rbxcdn_host

    print("[ИНФО] Патчинг файлов...")

    targets = [
        os.path.join(app_dir, "Roblox"),
        os.path.join(app_dir, "Info.plist"),
        os.path.join(app_dir, "Frameworks", "RobloxLib.framework", "RobloxLib")
    ]
    for path in targets:
        if os.path.isfile(path):
            patch_bytes(path, domains)

    app_name = os.path.basename(app_dir).replace(".app", "")
    out_name = ipa_path.replace(".ipa", f"_{app_name}_{app_year}_patched.ipa")
    with zipfile.ZipFile(out_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, _, files in os.walk(temp_dir):
            for file in files:
                full_path = os.path.join(root, file)
                rel_path = os.path.relpath(full_path, temp_dir)
                zipf.write(full_path, rel_path)

    shutil.rmtree(temp_dir)
    print(f"[ГОТОВО] Сохранено:\n{out_name}")
    messagebox.showinfo("Готово", f"Патч завершён!\nВерсия: {short_version}\nГод: {app_year}\nФайл:\n{out_name}")

if __name__ == "__main__":
    main()